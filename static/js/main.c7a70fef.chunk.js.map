{"version":3,"sources":["index.js"],"names":["App","state","prevVal","currentVal","activeOperator","handleNumberPress","e","number","target","innerHTML","_this","setState","_ref","length","concat","handleActiveClass","className","val","_this$state","setActiveOperator","persist","_ref2","calculate","innerText","prev","op","curr","Number","console","log","-","a","b","+","÷","×","handleEqual","_ref3","handleReset","handlePercentage","_ref4","handleSign","_ref5","indexOf","substr","handleDecimal","_ref6","this","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","onClick","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c7a70fef.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  state = {\n    prevVal: null,\n    currentVal: \"0\",\n    activeOperator: null\n  };\n\n  handleNumberPress = e => {\n    const number = e.target.innerHTML;\n    this.setState(({ currentVal, prevVal, activeOperator }) => {\n      // handles max length\n      if (currentVal.length === 11) return;\n      // handles when an operator has bn clicked\n      if (activeOperator !== null) {\n        // handles new number when starting number == 0\n        if (currentVal === \"0\" || activeOperator === \"=\") {\n          return {\n            currentVal: number\n          };\n        }\n        // handles when there's a previous val\n        if (prevVal !== null) {\n          return {\n            currentVal: `${currentVal}${number}`\n          };\n        }\n        return {\n          prevVal: currentVal,\n          currentVal: number\n        };\n      }\n      // handles new number when starting number == 0\n      if (currentVal === \"0\") {\n        return {\n          currentVal: number\n        };\n      } else {\n        return {\n          currentVal: `${currentVal}${number}`\n        };\n      }\n    });\n  };\n\n  handleActiveClass = (className, val) => {\n    const { activeOperator, prevVal } = this.state;\n    if (val === activeOperator && prevVal === null) {\n      return `${className} active`;\n    }\n    return className;\n  };\n\n  setActiveOperator = e => {\n    e.persist();\n    this.setState(({ activeOperator, prevVal, currentVal }) => {\n      if (activeOperator !== null) {\n        if (prevVal !== null) {\n          const val = this.calculate(prevVal, activeOperator, currentVal);\n          return {\n            activeOperator: e.target.innerText,\n            currentVal: val,\n            prevVal: null\n          };\n        }\n      }\n      return {\n        activeOperator: e.target.innerText\n      };\n    });\n  };\n\n  calculate = (prev, op, curr) => {\n    curr = Number(curr);\n    prev = Number(prev);\n    console.log(prev, curr, prev - curr);\n    return {\n      \"-\": (a, b) => a - b,\n      \"+\": (a, b) => a + b,\n      \"÷\": (a, b) => a / b,\n      \"×\": (a, b) => a * b\n    }[op](prev, curr);\n  };\n\n  handleEqual = () => {\n    this.setState(({ prevVal, activeOperator, currentVal }) => {\n      if (prevVal !== null) {\n        const val = this.calculate(prevVal, activeOperator, currentVal);\n        return {\n          currentVal: val,\n          prevVal: null,\n          activeOperator: \"=\"\n        };\n      }\n    });\n  };\n\n  handleReset = e => {\n    const reset = e.target.innerText;\n    if (reset === \"C\") {\n      this.setState({\n        currentVal: \"0\"\n      });\n    } else {\n      this.setState({\n        currentVal: \"0\",\n        prevVal: null,\n        activeOperator: null\n      });\n    }\n  };\n\n  handlePercentage = () => {\n    this.setState(({ currentVal }) => {\n      return {\n        currentVal: `${this.calculate(currentVal, \"÷\", 100)}`\n      };\n    });\n  };\n\n  handleSign = () => {\n    this.setState(({ currentVal }) => {\n      if (currentVal.indexOf(\"-\") === 0) {\n        return {\n          currentVal: `${currentVal.substr(1)}`\n        };\n      }\n      return {\n        currentVal: `-${currentVal}`\n      };\n    });\n  };\n\n  handleDecimal = () => {\n    this.setState(({ currentVal }) => {\n      if (currentVal.indexOf(\".\") === -1) {\n        return {\n          currentVal: `${currentVal}.`\n        };\n      }\n    });\n  };\n\n  render() {\n    const { currentVal } = this.state;\n    return (\n      <div className=\"calculator\">\n        <div className=\"display\">\n          <span className=\"display__value\">{currentVal}</span>\n        </div>\n        <div className=\"keyboard\">\n          <button className=\"key key__grey\" onClick={this.handleReset}>\n            {currentVal === \"0\" ? \"AC\" : \"C\"}\n          </button>\n          <button className=\"key key__grey\" onClick={this.handleSign}>\n            +/-\n          </button>\n          <button className=\"key key__grey\" onClick={this.handlePercentage}>\n            %\n          </button>\n          <button\n            className={this.handleActiveClass(\"key key__yellow\", \"÷\")}\n            onClick={this.setActiveOperator}\n          >\n            &divide;\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            7\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            8\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            9\n          </button>\n          <button\n            className={this.handleActiveClass(\"key key__yellow\", \"×\")}\n            onClick={this.setActiveOperator}\n          >\n            &times;\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            4\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            5\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            6\n          </button>\n          <button\n            className={this.handleActiveClass(\"key key__yellow\", \"-\")}\n            onClick={this.setActiveOperator}\n          >\n            -\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            1\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            2\n          </button>\n          <button className=\"key\" onClick={this.handleNumberPress}>\n            3\n          </button>\n          <button\n            className={this.handleActiveClass(\"key key__yellow\", \"+\")}\n            onClick={this.setActiveOperator}\n          >\n            +\n          </button>\n          <button className=\"key key_0\" onClick={this.handleNumberPress}>\n            0\n          </button>\n          <button className=\"key\" onClick={this.handleDecimal}>\n            .\n          </button>\n          <button className=\"key key__yellow\" onClick={this.handleEqual}>\n            =\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}